name: Trigger Auto Deployment

on:
  push:
    branches: [ main ]

env:
  AZURE_WEBAPP_PACKAGE_PATH: backend/publish
  BICEP_FILE: infrastructure/main.bicep
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 5.6.3
  SWASHBUCKLE_DOTNET_CORE_VERSION: 8.0.x
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: backend
 
jobs:

  validate-infra:
    runs-on: ubuntu-latest
    outputs:
        PROVISION_REQUIRED: ${{ steps.check-resources.outputs.PROVISION_REQUIRED }}
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDS }}

      - name: Check Azure Resources
        id: check-resources
        run: |
          set -e
          RG_EXISTS=$(az group exists --name ${{ vars.AZURE_RESOURCE_GROUP }})
          APP_EXISTS=$(az webapp show --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} --name ${{ vars.AZURE_APP_SERVICE }} --query "id" --output tsv --only-show-errors || echo "false")
          DB_EXISTS=$(az sql db show --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} --server ${{ vars.AZURE_SQL_SERVER }} --name ${{ vars.AZURE_DATABASE }} --query "id" --output tsv --only-show-errors || echo "false")

          if [[ "$RG_EXISTS" == "false" || "$APP_EXISTS" == "false" || "$DB_EXISTS" == "false" ]]; then
            echo "PROVISION_REQUIRED=true" >> $GITHUB_OUTPUT
          else
            echo "PROVISION_REQUIRED=false" >> $GITHUB_OUTPUT
          fi

      - name: Azure Logout
        run: az logout

  provision-infra:
    needs: validate-infra
    if: needs.validate-infra.outputs.PROVISION_REQUIRED == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDS }}

      # - name: Delete Existing Resources (if necessary)
      #   run: |
      #     az group delete --name ${{ secrets.AZURE_RESOURCE_GROUP }} --yes --no-wait || echo "No resource group to delete."

      - name: Generate params.json
        run: |
          cat <<EOF > params.json
          {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "azure_location": { "value": "${{ vars.AZURE_LOCATION }}" },
              "sql_server": { "value": "${{ vars.AZURE_SQL_SERVER }}" },
              "sql_database": { "value": "${{ vars.AZURE_DATABASE }}" },
              "sql_admin": { "value": "${{ secrets.AZURE_SQL_ADMIN }}" },
              "sql_password": { "value": "${{ secrets.AZURE_SQL_PASSWORD }}" },
              "api_name": { "value": "${{ vars.AZURE_WEBAPP_NAME }}" },
              "asp_name": { "value": "${{ vars.AZURE_APP_SERVICE }}" },
              "rg_name": { "value": "${{ vars.AZURE_RESOURCE_GROUP }}" },
              "ai_api_key": { "value": "${{secrets.AITOKENAPIKEY}}" },
              "environment_name": { "value": "${{ vars.ENV_NAME }}" },
              "job_name": { "value": "${{ vars.JOB_NAME }}" },
              "docker_image": { "value": "${{ vars.DOCKER_IMAGE }}" }
            }
          }
          EOF

      - name: Test Deployment with Bicep
        run: |
          az deployment sub what-if --location ${{ vars.AZURE_LOCATION }} --template-file ${{ env.BICEP_FILE }} --parameters @params.json


      - name: Deploy Infrastructure with Bicep
        run: |
          az deployment sub create --location ${{ vars.AZURE_LOCATION }} --template-file ${{ env.BICEP_FILE }} --parameters @params.json

      - name: Azure Logout
        run: az logout

  build:
    needs: [validate-infra, provision-infra]
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up .net8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      - name: Install Swashbuckle CLI .NET Global Tool
        run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version ${{ env.SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION }}
      - name: Install AutoMapper CLI .NET Global Tool
        run: dotnet add ${{ env.WORKING_DIRECTORY }} package AutoMapper --version 13.0.1
      - name: Restore dependencies
        run: dotnet restore ${{ env.WORKING_DIRECTORY }}
      - name: Build
        run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore
      - name: Test
        run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build --verbosity normal
      - name: Publish
        run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: p4-api
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: p4-api
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDS }}
      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        
      - name: Azure Logout
        run: az logout
